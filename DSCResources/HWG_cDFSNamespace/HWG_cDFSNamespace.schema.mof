[ClassVersion("1.0.0.0"), FriendlyName("cDFSNamespace")]
class HWG_cDFSNamespace : OMI_BaseResource
{
    [key, Description("The name of the DFS Namespace.")] String Namespace;
    [Required, Description("If Namespace should exist."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("The name of the computer hosting this DFS Namespace.")] String ComputerName;
    [Write, Description("The name of the AD Domain the DFS Namespace is hosted on.")] String DomainName;
    [Write, Description("The description of the DFS Namespace.")] String Description;
    [Write, Description("Indicates whether a DFS namespace uses cost-based selection.")] Boolean EnableSiteCosting;
    [Write, Description("Indicates whether a DFS namespace server provides a client only with referrals that are in the same site as the client.")] Boolean EnableInsiteReferrals;
    [Write, Description("Indicates whether a DFS namespace uses access-based enumeration.")] Boolean EnableAccessBasedEnumeration;
    [Write, Description("Indicates whether a DFS namespace uses root scalability mode.")] Boolean EnableRootScalability;
    [Write, Description("Indicates whether a DFS namespace uses target failback.")] Boolean EnableTargetFailback;
    [Write, Description("Specifies the target priority class for a DFS namespace root."), ValueMap{"GlobalHigh","SiteCostHigh","SiteCostNormal","SiteCostLow","GlobalLow"}, Values{"GlobalHigh","SiteCostHigh","SiteCostNormal","SiteCostLow","GlobalLow"}] String ReferralPriorityClass
    [Write, Description("Specifies the priority rank, as an integer, for a root target of the DFS namespace.")] Uint32 ReferralPriorityRank;
    [Read] String Path;
    [Read] String Type;
    [Read] Uint32 TimeToLiveSec;
    [Read] String State;
};
